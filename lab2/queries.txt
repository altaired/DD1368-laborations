# Crew

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_basics)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
)

SELECT title_crew.job, title_crew.characters, name_basics.primary_name, title_basics_filtered.primary_title FROM title_crew
INNER JOIN name_basics ON title_crew.nconst = name_basics.nconst
LEFT JOIN title_basics_filtered ON title_crew.tconst = title_basics_filtered.tconst
WHERE name_basics.primary_name LIKE '%Jason%';

# Genre

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_basics)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
), titles_with_given_genre AS (
  SELECT DISTINCT tconst FROM title_genres
  WHERE genre LIKE '%comedy%'
)

SELECT * FROM title_basics_filtered
WHERE tconst IN (SELECT tconst FROM titles_with_given_genre);

# Language

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_basics)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
), titles_with_desired_language AS (
     SELECT tconst FROM title_akas WHERE language = 'fi'
)

SELECT * FROM title_basics_filtered
WHERE tconst IN (SELECT tconst FROM titles_with_desired_language);

# Type

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_basics)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
)

SELECT * FROM title_basics_filtered
WHERE title_type = 'MOVIE';

# Rating

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_basics)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
  SELECT *
  FROM title_basics
  WHERE tconst IN (SELECT tconst FROM child_safe)
    AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
    AND age_limit <= (SELECT age FROM user_age)
), user_watched AS (
  SELECT * FROM user_watch
  WHERE uconst = :user
)

SELECT * FROM title_basics_filtered tbf
INNER JOIN user_watched uw ON uw.tconst = tbf.tconst
AND rating IS NOT NULL
WHERE rating > 3;


# Remaining episodes

-- DRAFT. nr_ep_watched_series works now :)
WITH nr_ep_watched_series AS (
  SELECT title_episode.parent_tconst, title_basics.original_title, COUNT(*)
  FROM user_watch join title_basics
    on user_watch.tconst = title_basics.tconst
    join title_episode on user_watch.tconst = title_episode.tconst
  WHERE user_watch.uconst = 1
    AND title_basics.title_type = 'TV-EPISODE'
  GROUP BY title_episode.parent_tconst, title_basics.original_title
), all_ep_series AS (
  SELECT  title_episode.tconst, title_episode.parent_tconst, title_basics.original_title
  FROM title_episode join title_basics
    on title_episode.tconst = title_basics.tconst
  ORDER by parent_tconst, season_number, episode_number
)
  SELECT original_title, COUNT(*)
  FROM all_ep_series
  GROUP BY parent_tconst, original_title
