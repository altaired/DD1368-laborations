# Crew

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
)

SELECT title_crew.job, title_crew.characters, name_basics.primary_name, title_basics_filtered.primary_title FROM title_crew
INNER JOIN name_basics ON title_crew.nconst = name_basics.nconst
LEFT JOIN title_basics_filtered ON title_crew.tconst = title_basics_filtered.tconst
WHERE name_basics.primary_name LIKE '%Jason%';

# Genre

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
), titles_with_given_genre AS (
  SELECT DISTINCT tconst FROM title_genres
  WHERE genre LIKE '%comedy%'
)

SELECT * FROM title_basics_filtered
WHERE tconst IN (SELECT tconst FROM titles_with_given_genre);

# Language

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
), titles_with_desired_language AS (
     SELECT tconst FROM title_akas WHERE language = 'fi'
)

SELECT * FROM title_basics_filtered
WHERE tconst IN (SELECT tconst FROM titles_with_desired_language);

# Type

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
)

SELECT * FROM title_basics_filtered
WHERE title_type = 'MOVIE';

# Rating

\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), title_basics_filtered AS (
  SELECT *
  FROM title_basics
  WHERE tconst IN (SELECT tconst FROM child_safe)
    AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
    AND age_limit <= (SELECT age FROM user_age)
), user_watched AS (
  SELECT * FROM user_watch
  WHERE uconst = :user
)

SELECT * FROM title_basics_filtered tbf
INNER JOIN user_watched uw ON uw.tconst = tbf.tconst
AND rating IS NOT NULL
WHERE rating > 3;

# Changed to not show already watched titles


\set user 1

WITH user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), user_watched AS (
  SELECT tconst FROM user_watch
  WHERE uconst = :user
  AND date IS NOT NULL
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
      AND tconst NOT IN (SELECT tconst FROM user_watched)
)

SELECT title_crew.job, title_crew.characters, name_basics.primary_name, title_basics_filtered.primary_title FROM title_crew
INNER JOIN name_basics ON title_crew.nconst = name_basics.nconst
LEFT JOIN title_basics_filtered ON title_crew.tconst = title_basics_filtered.tconst
WHERE name_basics.primary_name LIKE '%Jason%';


# Remaining episodes

\set user 1

WITH episodes AS (
  SELECT tconst FROM title_basics
  WHERE title_type = 'TV-EPISODE'
), user_watched AS (
  SELECT * FROM user_watch
  WHERE uconst = :user
  AND tconst IN (SELECT tconst FROM episodes)
), user_watched_with_parent AS (
  SELECT te.parent_tconst, uw.uconst FROM user_watched uw
  LEFT JOIN title_episode te
  ON te.tconst = uw.tconst
), count_watched_episodes AS (
  SELECT parent_tconst, COUNT(*) AS cnt FROM user_watched_with_parent
  GROUP BY parent_tconst
), count_all_episodes AS (
  SELECT parent_tconst, COUNT(*) AS cnt FROM title_episode
  GROUP BY parent_tconst
), not_finished_series AS (
  SELECT cae.parent_tconst AS tconst,
         cwe.cnt AS watched,
         cae.cnt AS total
  FROM count_all_episodes cae
  LEFT JOIN count_watched_episodes cwe ON cae.parent_tconst = cwe.parent_tconst
), user_profile AS (
  SELECT * FROM user_basics
  WHERE uconst = :user
), child_safe AS (
  SELECT t.tconst FROM title_basics t
  WHERE is_adult != (SELECT is_child FROM user_profile)
  OR is_adult = false
), forbidden_genres AS (
  SELECT genre FROM user_genres
  WHERE uconst = :user
), forbidden_titles AS (
  SELECT tconst FROM title_genres
  WHERE genre IN (SELECT genre FROM forbidden_genres)
), user_age AS (
  SELECT age FROM user_basics_age
  WHERE uconst = :user
), user_watched_date AS (
  SELECT tconst FROM user_watch
  WHERE uconst = :user
  AND date IS NOT NULL
), title_basics_filtered AS (
    SELECT *
    FROM title_basics
    WHERE tconst IN (SELECT tconst FROM child_safe)
      AND tconst NOT IN (SELECT tconst FROM forbidden_titles)
      AND age_limit <= (SELECT age FROM user_age)
      AND tconst NOT IN (SELECT tconst FROM user_watched_date)
), title_basics_filtered_series AS (
  SELECT * FROM title_basics_filtered
  WHERE title_type = 'TV-SERIES'
), series_to_watch AS (
  SELECT tconst FROM not_finished_series nfs
  WHERE nfs.total - nfs.watched > 0
  UNION ALL (
    SELECT tconst FROM title_basics_filtered_series
    WHERE tconst NOT IN (SELECT parent_tconst FROM user_watched_with_parent)
  )
)

SELECT * FROM series_to_watch stw
LEFT JOIN title_basics tb ON
stw.tconst = tb.tconst;

# Set user watched

\set user 1

WITH episodes AS (
  SELECT tconst FROM title_basics
  WHERE title_type = 'TV-EPISODE'
), user_watched AS (
  SELECT * FROM user_watch
  WHERE uconst = :user
  AND tconst IN (SELECT tconst FROM episodes)
), user_watched_with_parent AS (
  SELECT te.parent_tconst, uw.uconst FROM user_watched uw
  LEFT JOIN title_episode te
  ON te.tconst = uw.tconst
), count_watched_episodes AS (
  SELECT parent_tconst, COUNT(*) AS cnt, uconst FROM user_watched_with_parent
  GROUP BY parent_tconst, uconst
), count_all_episodes AS (
  SELECT parent_tconst, COUNT(*) AS cnt FROM title_episode
  GROUP BY parent_tconst
), series AS (
  SELECT cae.parent_tconst AS tconst,
         cwe.cnt AS watched,
         cae.cnt AS total,
         cwe.uconst
  FROM count_all_episodes cae
  LEFT JOIN count_watched_episodes cwe ON cae.parent_tconst = cwe.parent_tconst
), finished_series AS (
  SELECT tconst, uconst FROM series
  WHERE watched = total
)

INSERT INTO user_watch (tconst, uconst, date) SELECT tconst, uconst, now() FROM finished_series;
